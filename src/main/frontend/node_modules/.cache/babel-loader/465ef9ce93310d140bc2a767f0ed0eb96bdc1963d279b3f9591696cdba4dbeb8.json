{"ast":null,"code":"import _toConsumableArray from\"C:/Project/demo/src/main/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Project/demo/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import styles from\"./detail.module.css\";import{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import{getProducts}from\"../../service/fetcher\";import CategoryBar from\"../category/categoryBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Detail=function Detail(_ref){var convertPrice=_ref.convertPrice,cart=_ref.cart,setCart=_ref.setCart;var _useParams=useParams(),id=_useParams.id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),product=_useState2[0],setProduct=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];// 상세페이지에서 물건 수량 조절\nvar handleQuantity=function handleQuantity(type){if(type===\"plus\"){setCount(count+1);}else{if(count===1)return;setCount(count-1);}};// 장바구니에 중복된 물건을 담을 때 사용\nvar setQuantity=function setQuantity(id,quantity){var found=cart.filter(function(el){return el.id===id;})[0];var idx=cart.indexOf(found);var cartItem={id:product.id,image:product.image,name:product.name,quantity:quantity,price:product.price,provider:product.provider};setCart([].concat(_toConsumableArray(cart.slice(0,idx)),[cartItem],_toConsumableArray(cart.slice(idx+1))));};var handleCart=function handleCart(){var cartItem={id:product.id,image:product.image,name:product.name,quantity:count,price:product.price,provider:product.provider};var found=cart.find(function(el){return el.id===cartItem.id;});if(found)setQuantity(cartItem.id,found.quantity+count);else setCart([].concat(_toConsumableArray(cart),[cartItem]));};useEffect(function(){getProducts().then(function(data){setProduct(data.data.products.find(function(product){return product.id===parseInt(id);}));});},[id,product.price]);return product&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CategoryBar,{}),/*#__PURE__*/_jsxs(\"main\",{className:styles.main,children:[/*#__PURE__*/_jsx(\"section\",{className:styles.product,children:/*#__PURE__*/_jsx(\"div\",{className:styles.product_img,children:/*#__PURE__*/_jsx(\"img\",{src:product.image,alt:\"product\"})})}),/*#__PURE__*/_jsx(\"section\",{className:styles.product,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.product_info,children:[/*#__PURE__*/_jsx(\"p\",{className:styles.seller_store,children:product.provider}),/*#__PURE__*/_jsx(\"p\",{className:styles.product_name,children:product.name}),/*#__PURE__*/_jsxs(\"span\",{className:styles.price,children:[convertPrice(product.price+\"\"),/*#__PURE__*/_jsx(\"span\",{className:styles.unit,children:\"\\uC6D0\"})]})]})})]})]});};","map":{"version":3,"names":["styles","useEffect","useState","useParams","getProducts","CategoryBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Detail","_ref","convertPrice","cart","setCart","_useParams","id","_useState","_useState2","_slicedToArray","product","setProduct","_useState3","_useState4","count","setCount","handleQuantity","type","setQuantity","quantity","found","filter","el","idx","indexOf","cartItem","image","name","price","provider","concat","_toConsumableArray","slice","handleCart","find","then","data","products","parseInt","children","className","main","product_img","src","alt","product_info","seller_store","product_name","unit"],"sources":["C:/Project/demo/src/main/frontend/src/components/product_detail/detail.js"],"sourcesContent":["import styles from \"./detail.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getProducts } from \"../../service/fetcher\";\r\nimport CategoryBar from \"../category/categoryBar\";\r\n\r\nexport const Detail = ({ convertPrice, cart, setCart }) => {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState({});\r\n  const [count, setCount] = useState(1);\r\n\r\n  // 상세페이지에서 물건 수량 조절\r\n  const handleQuantity = (type) => {\r\n    if (type === \"plus\") {\r\n      setCount(count + 1);\r\n    } else {\r\n      if (count === 1) return;\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  // 장바구니에 중복된 물건을 담을 때 사용\r\n  const setQuantity = (id, quantity) => {\r\n    const found = cart.filter((el) => el.id === id)[0];\r\n    const idx = cart.indexOf(found);\r\n    const cartItem = {\r\n      id: product.id,\r\n      image: product.image,\r\n      name: product.name,\r\n      quantity: quantity,\r\n      price: product.price,\r\n      provider: product.provider,\r\n    };\r\n    setCart([...cart.slice(0, idx), cartItem, ...cart.slice(idx + 1)]);\r\n  };\r\n\r\n  const handleCart = () => {\r\n    const cartItem = {\r\n      id: product.id,\r\n      image: product.image,\r\n      name: product.name,\r\n      quantity: count,\r\n      price: product.price,\r\n      provider: product.provider,\r\n    };\r\n    const found = cart.find((el) => el.id === cartItem.id);\r\n    if (found) setQuantity(cartItem.id, found.quantity + count);\r\n    else setCart([...cart, cartItem]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts().then((data) => {\r\n      setProduct(\r\n        data.data.products.find((product) => product.id === parseInt(id))\r\n      );\r\n    });\r\n  }, [id, product.price]);\r\n\r\n  return (\r\n    product && (\r\n      <>\r\n      <CategoryBar/>\r\n        <main className={styles.main}>\r\n          <section className={styles.product}>\r\n            <div className={styles.product_img}>\r\n              <img src={product.image} alt=\"product\" />\r\n            </div>\r\n          </section>\r\n          <section className={styles.product}>\r\n            <div className={styles.product_info}>\r\n              <p className={styles.seller_store}>{product.provider}</p>\r\n              <p className={styles.product_name}>{product.name}</p>\r\n              <span className={styles.price}>\r\n                {convertPrice(product.price + \"\")}\r\n                <span className={styles.unit}>원</span>\r\n              </span>\r\n            </div>\r\n\r\n            {/* <div className={styles.delivery}>\r\n              <p>택배배송 / 무료배송</p>\r\n            </div>\r\n\r\n            <div className={styles.line}></div>\r\n\r\n            <div className={styles.amount}>\r\n              <img\r\n                className={styles.minus}\r\n                src=\"/images/icon-minus-line.svg\"\r\n                alt=\"minus\"\r\n                onClick={() => handleQuantity(\"minus\")}\r\n              />\r\n\r\n              <div className={styles.count}>\r\n                <span>{count}</span>\r\n              </div>\r\n\r\n              <img\r\n                className={styles.plus}\r\n                src=\"/images/icon-plus-line.svg\"\r\n                alt=\"plus\"\r\n                onClick={() => handleQuantity(\"plus\")}\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.line}></div>\r\n\r\n            <div className={styles.sum}>\r\n              <div>\r\n                <span className={styles.sum_price}>총 상품 금액</span>\r\n              </div>\r\n\r\n              <div className={styles.total_info}>\r\n                <span className={styles.total}>\r\n                  총 수량 <span className={styles.total_count}>{count}개</span>\r\n                </span>\r\n                <span className={styles.total_price}>\r\n                  {convertPrice(product.price * count)}\r\n                  <span className={styles.total_unit}>원</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.btn}>\r\n              <button className={styles.btn_buy}>바로 구매</button>\r\n              <button\r\n                className={styles.btn_cart}\r\n                onClick={() => {\r\n                  handleCart();\r\n                }}\r\n              >\r\n                장바구니\r\n              </button>\r\n            </div> */}\r\n          </section>\r\n        </main>\r\n      </>\r\n    )\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}