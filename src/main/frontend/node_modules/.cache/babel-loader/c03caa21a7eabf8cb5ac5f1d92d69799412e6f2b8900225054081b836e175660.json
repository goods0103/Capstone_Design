{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\capstone\\\\demo\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\eventBanner\\\\ShowMySpec.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowMySpec() {\n  _s();\n  const [data, setData] = useState(null);\n  const [cpuInfo, setCpuInfo] = useState('');\n  const [gpuInfo, setGpuInfo] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpuModel, setCpuModel] = useState('');\n  useEffect(() => {\n    // CPU 정보 가져오기\n    const cpu = navigator.hardwareConcurrency;\n    setCpuInfo(`CPU 모델명: ${cpu}`);\n    axios.get('/cpu').then(response => setCpuModel(response.data.model)).catch(error => console.log(error));\n\n    // WebGL을 사용하여 GPU 정보 가져오기\n    const canvas = document.createElement('canvas');\n    const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    if (gl) {\n      const info = gl.getExtension('WEBGL_debug_renderer_info');\n      if (info) {\n        const gpu = gl.getParameter(info.UNMASKED_RENDERER_WEBGL);\n        setGpuInfo(`GPU 모델명: ${gpu}`);\n      } else {\n        setGpuInfo('GPU 정보를 가져올 수 없습니다.');\n      }\n    } else {\n      setGpuInfo('WebGL을 지원하지 않는 브라우저입니다.');\n    }\n  }, []);\n  const handleClick = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:12000\");\n      console.log(\"받은 데이터:\", response.data);\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n      // TODO: 오류 처리 로직을 추가\n    }\n  };\n\n  const handleInputChange = event => {\n    if (event.target.name === \"email\") {\n      setEmail(event.target.value);\n    } else if (event.target.name === \"password\") {\n      setPassword(event.target.value);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const userData = {\n      email: email,\n      password: password\n    };\n    console.log(\"first clear\");\n    axios.post('http://localhost:12000/api/signup', userData).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    console.log(\"second clear\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Send Request to Spring Boot Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), data && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"CPU \\uBAA8\\uB378\\uBA85: \", cpuModel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), cpuInfo !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"CPU \\uC815\\uBCF4: \", cpuInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 34\n    }, this), gpuInfo !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"GPU \\uC815\\uBCF4: \", gpuInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowMySpec, \"ZHiode1fXbk8xQs0VcCwFuJsot0=\");\n_c = ShowMySpec;\nexport default ShowMySpec;\nvar _c;\n$RefreshReg$(_c, \"ShowMySpec\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ShowMySpec","_s","data","setData","cpuInfo","setCpuInfo","gpuInfo","setGpuInfo","email","setEmail","password","setPassword","cpuModel","setCpuModel","cpu","navigator","hardwareConcurrency","get","then","response","model","catch","error","console","log","canvas","document","createElement","gl","getContext","info","getExtension","gpu","getParameter","UNMASKED_RENDERER_WEBGL","handleClick","handleInputChange","event","target","name","value","handleSubmit","preventDefault","userData","post","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","onSubmit","htmlFor","type","onChange","_c","$RefreshReg$"],"sources":["C:/Project/capstone/demo/src/main/frontend/src/components/eventBanner/ShowMySpec.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ShowMySpec() {\r\n    const [data, setData] = useState(null);\r\n    const [cpuInfo, setCpuInfo] = useState('');\r\n    const [gpuInfo, setGpuInfo] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [cpuModel, setCpuModel] = useState('');\r\n\r\n    useEffect(() => {\r\n        // CPU 정보 가져오기\r\n        const cpu = navigator.hardwareConcurrency;\r\n        setCpuInfo(`CPU 모델명: ${cpu}`);\r\n\r\n        axios.get('/cpu')\r\n            .then(response => setCpuModel(response.data.model))\r\n            .catch(error => console.log(error));\r\n\r\n        // WebGL을 사용하여 GPU 정보 가져오기\r\n        const canvas = document.createElement('canvas');\r\n        const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n        if (gl) {\r\n            const info = gl.getExtension('WEBGL_debug_renderer_info');\r\n            if (info) {\r\n                const gpu = gl.getParameter(info.UNMASKED_RENDERER_WEBGL);\r\n                setGpuInfo(`GPU 모델명: ${gpu}`);\r\n            } else {\r\n                setGpuInfo('GPU 정보를 가져올 수 없습니다.');\r\n            }\r\n        } else {\r\n            setGpuInfo('WebGL을 지원하지 않는 브라우저입니다.');\r\n        }\r\n    }, []);\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:12000\");\r\n            console.log(\"받은 데이터:\", response.data);\r\n            setData(response.data);\r\n        } catch (error) {\r\n            console.error(error);\r\n            // TODO: 오류 처리 로직을 추가\r\n        }\r\n    };\r\n\r\n    const handleInputChange = event => {\r\n        if (event.target.name === \"email\") {\r\n            setEmail(event.target.value);\r\n        } else if (event.target.name === \"password\") {\r\n            setPassword(event.target.value);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        console.log(\"first clear\");\r\n        axios.post('http://localhost:12000/api/signup', userData)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        console.log(\"second clear\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>Send Request to Spring Boot Server</button>\r\n            {data && (\r\n                <ul>\r\n                    {data.map((item) => (\r\n                        <li key={item.id}>{item.name}</li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            <p>CPU 모델명: {cpuModel}</p>\r\n            {cpuInfo !== null && <p>CPU 정보: {cpuInfo}</p>}\r\n            {gpuInfo !== null && <p>GPU 정보: {gpuInfo}</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" id=\"email\" name=\"email\" onChange={handleInputChange} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" onChange={handleInputChange} />\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowMySpec;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}