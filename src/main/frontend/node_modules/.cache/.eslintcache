[{"C:\\Project\\demo\\src\\main\\frontend\\src\\index.js":"1","C:\\Project\\demo\\src\\main\\frontend\\src\\App.js":"2","C:\\Project\\demo\\src\\main\\frontend\\src\\pages\\basket.js":"3","C:\\Project\\demo\\src\\main\\frontend\\src\\pages\\home.js":"4","C:\\Project\\demo\\src\\main\\frontend\\src\\pages\\product.js":"5","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\topButton\\topButton.js":"6","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\header\\topNavigationBar.js":"7","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\orderComplete.js":"8","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\category\\categoryBar.js":"9","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\category\\categoryMove.js":"10","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\eventBanner\\ShowMySpec.js":"11","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cart.js":"12","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\product_detail\\detail.js":"13","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\main\\main.js":"14","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\products\\product.js":"15","C:\\Project\\demo\\src\\main\\frontend\\src\\service\\fetcher.js":"16","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cartHeader.js":"17","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\eventBanner\\eventBanner.js":"18","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cartProgress.js":"19","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cartList.js":"20","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\totalCart.js":"21"},{"size":197,"mtime":1668919987000,"results":"22","hashOfConfig":"23"},{"size":2310,"mtime":1678952848352,"results":"24","hashOfConfig":"23"},{"size":207,"mtime":1668919987000,"results":"25","hashOfConfig":"23"},{"size":259,"mtime":1668919987000,"results":"26","hashOfConfig":"23"},{"size":225,"mtime":1668919987000,"results":"27","hashOfConfig":"23"},{"size":918,"mtime":1668919987000,"results":"28","hashOfConfig":"23"},{"size":1449,"mtime":1676617704000,"results":"29","hashOfConfig":"23"},{"size":1148,"mtime":1669021091000,"results":"30","hashOfConfig":"23"},{"size":1570,"mtime":1676615338000,"results":"31","hashOfConfig":"23"},{"size":1930,"mtime":1678952848354,"results":"32","hashOfConfig":"23"},{"size":3754,"mtime":1679040558334,"results":"33","hashOfConfig":"23"},{"size":3353,"mtime":1678952848353,"results":"34","hashOfConfig":"23"},{"size":4373,"mtime":1678952848356,"results":"35","hashOfConfig":"23"},{"size":1601,"mtime":1678631438000,"results":"36","hashOfConfig":"23"},{"size":821,"mtime":1668919987000,"results":"37","hashOfConfig":"23"},{"size":148,"mtime":1668919987000,"results":"38","hashOfConfig":"23"},{"size":647,"mtime":1678952848354,"results":"39","hashOfConfig":"23"},{"size":3052,"mtime":1678631081000,"results":"40","hashOfConfig":"23"},{"size":1525,"mtime":1669021010000,"results":"41","hashOfConfig":"23"},{"size":2946,"mtime":1669013225000,"results":"42","hashOfConfig":"23"},{"size":3610,"mtime":1669019137000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f9hl7z",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"C:\\Project\\demo\\src\\main\\frontend\\src\\index.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\App.js",["116","117"],[],"import \"./App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { TopNavigationBar } from \"./components/header/topNavigationBar\";\r\nimport Home from \"./pages/home\";\r\nimport Product from \"./pages/product\";\r\nimport Basket from \"./pages/basket\";\r\nimport TopButton from \"./components/topButton/topButton\";\r\nimport CategoryBar from \"./components/category/categoryBar\";\r\nimport { OrderComplete } from \"./components/cart/orderComplete\";\r\nimport { CategoryMove } from \"./components/category/categoryMove\";\r\nimport ShowMySpec from \"./components/eventBanner/ShowMySpec\";\r\n\r\nfunction App() {\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const a=10;\r\n  const convertPrice = (price) => {\r\n    return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <TopNavigationBar cart={cart} />\r\n      {/* <CategoryBar></CategoryBar> */}\r\n      <TopButton></TopButton>\r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <Home\r\n              convertPrice={convertPrice}\r\n              products={products}\r\n              setProducts={setProducts}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/product/:id\"\r\n          element={\r\n            <Product\r\n              convertPrice={convertPrice}\r\n              cart={cart}\r\n              setCart={setCart}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/cart\"\r\n          element={\r\n            <Basket cart={cart} setCart={setCart} convertPrice={convertPrice} />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/cart/orderComplete\"\r\n          element={\r\n            <OrderComplete />\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/category/:n\"\r\n          element={\r\n            <CategoryMove\r\n              convertPrice={convertPrice}\r\n              products={products}\r\n              setProducts={setProducts}\r\n            />\r\n\r\n          }\r\n        />\r\n          <Route\r\n              path=\"/showMySpec\"\r\n              element={\r\n                  <ShowMySpec />\r\n              }\r\n          />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Project\\demo\\src\\main\\frontend\\src\\pages\\basket.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\pages\\home.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\pages\\product.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\topButton\\topButton.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\header\\topNavigationBar.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\orderComplete.js",["118"],[],"import styles from \"./cart.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const OrderComplete = () => {\n    const date = new Date();\n    const week = new Array('일', '월', '화', '수', '목', '금', '토');\n    return(\n        <div className={styles.orderComplete}>\n            <h1 className={styles.orderCompleteH1}>주문이 완료되었습니다!</h1>\n            <p className={styles.orderCompleteP}>\n                주문시간 : {date.toLocaleString()} [{week[date.getDay()]}요일]<br/>\n                배송기간 1~2일 소요 <b className={styles.orderCompleteB}>[{week[date.getDay() + 2]}요일] 도착 보장</b>\n            </p>\n            <p className={styles.orderCompleteP}>\n            <Link to=\"/\">\n                <button className={styles.btn_submit}>\n                    계속쇼핑하기\n                </button>\n            </Link>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <Link to=\"/cart\">\n                <button className={styles.btn_submit}>\n                    주문취소하기\n                </button>\n            </Link>\n            </p>\n        </div>\n    )\n}","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\category\\categoryBar.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\category\\categoryMove.js",["119"],[],"import styles from \"../main/main.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { Product } from \"../products/product\";\r\nimport { getProducts } from \"../../service/fetcher\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CategoryBar from \"./categoryBar\";\r\n\r\nexport const CategoryMove = ({ convertPrice, products, setProducts }) => {\r\n    let params = useParams();\r\n    let category = params.n;\r\n    const sortProduct = (type) => {\r\n        if (type === \"recent\") {\r\n          const newProduct = [...products];\r\n          newProduct.sort((a, b) => a.id - b.id);\r\n          setProducts(newProduct);\r\n        } else if (type === \"row\") {\r\n          const newProduct = [...products];\r\n          newProduct.sort((a, b) => a.price - b.price);\r\n          setProducts(newProduct);\r\n        } else if (type === \"high\") {\r\n          const newProduct = [...products];\r\n          newProduct.sort((a, b) => b.price - a.price);\r\n          setProducts(newProduct);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        getProducts().then((data) => {\r\n          setProducts(data.data.products);\r\n        });\r\n      }, [setProducts]);\r\n      return (\r\n        <>\r\n        <CategoryBar></CategoryBar>\r\n          <p></p>\r\n          <div className={styles.filter}>\r\n            <p onClick={() => sortProduct(\"recent\")}>최신순</p>\r\n            <p onClick={() => sortProduct(\"row\")}>낮은 가격</p>\r\n            <p onClick={() => sortProduct(\"high\")}>높은 가격</p>\r\n          </div>\r\n          <main className={styles.flex_wrap}>\r\n            {products.map((product) => {\r\n                if(product.category === category)\r\n                return (\r\n                    <Product\r\n                    key={`key-${product.id}`}\r\n                    product={product}\r\n                    convertPrice={convertPrice}\r\n                    />\r\n              );\r\n            })}\r\n          </main>\r\n        </>\r\n      );\r\n};","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\eventBanner\\ShowMySpec.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cart.js",["120"],[],"import styles from \"./cart.module.css\";\r\nimport { useState } from \"react\";\r\nimport { CartHeader } from \"./cartHeader\";\r\nimport { CartList } from \"./cartList\";\r\nimport { TotalCart } from \"./totalCart\";\r\nimport { CartProgress } from \"./cartProgress\";\r\n\r\nexport const Cart = ({ cart, setCart, convertPrice }) => {\r\n  const [total, setTotal] = useState(0);\r\n  const [checkLists, setCheckLists] = useState([]);\r\n  const isAllChecked =\r\n    cart.length === checkLists.length && checkLists.length !== 0;\r\n\r\n  const found = checkLists.map((checkList) =>\r\n    cart.filter((el) => el.id === parseInt(checkList))\r\n  );\r\n\r\n  const handelDiscount = () => {\r\n\r\n  }\r\n\r\n  const handleQuantity = (type, id, quantity) => {\r\n    const found = cart.filter((el) => el.id === id)[0];\r\n    const idx = cart.indexOf(found);\r\n\r\n    if (type === \"plus\") {\r\n      const cartItem = {\r\n        id: found.id,\r\n        image: found.image,\r\n        name: found.name,\r\n        quantity: quantity,\r\n        price: found.price,\r\n        provider: found.provider,\r\n      };\r\n      setCart([...cart.slice(0, idx), cartItem, ...cart.slice(idx + 1)]);\r\n    } else {\r\n      if (quantity === 0) return;\r\n      const cartItem = {\r\n        id: found.id,\r\n        image: found.image,\r\n        name: found.name,\r\n        quantity: quantity,\r\n        price: found.price,\r\n        provider: found.provider,\r\n      };\r\n      setCart([...cart.slice(0, idx), cartItem, ...cart.slice(idx + 1)]);\r\n    }\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    setCart(cart.filter((cart) => cart.id !== id));\r\n    setCheckLists(checkLists.filter((check) => parseInt(check) !== id));\r\n  };\r\n\r\n  const handleCheckList = (checked, id) => {\r\n    if (checked) {\r\n      setCheckLists([...checkLists, id]);\r\n    } else {\r\n      setCheckLists(checkLists.filter((check) => check !== id));\r\n    }\r\n  };\r\n\r\n  const handleCheckAll = (checked) => {\r\n    if (checked) {\r\n      const checkItems = [];\r\n      cart.map((cart) => checkItems.push(`${cart.id}`));\r\n      setCheckLists(checkItems);\r\n    } else {\r\n      setCheckLists([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CartHeader isAllChecked={isAllChecked} handleCheckAll={handleCheckAll} />\r\n      {cart.length !== 0 ? (\r\n        cart.map((cart) => {\r\n          return (\r\n            <CartList\r\n              key={`key-${cart.id}`}\r\n              cart={cart}\r\n              setCart={setCart}\r\n              convertPrice={convertPrice}\r\n              handleQuantity={handleQuantity}\r\n              handleRemove={handleRemove}\r\n              handleCheckList={handleCheckList}\r\n              checkLists={checkLists}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <div className={styles.not}>\r\n          {/* <h2>장바구니에 담긴 상품이 없습니다.</h2>\r\n          <p>원하는 상품을 장바구니에 담아보세요!</p> */}\r\n        </div>\r\n      )}\r\n      {cart.length !== 0 ? (\r\n        <>\r\n          <CartProgress\r\n            cart={cart}\r\n            total={total}\r\n            setTotal={setTotal}\r\n            convertPrice={convertPrice}\r\n            found={found}\r\n          />\r\n\r\n          <TotalCart\r\n            cart={cart}\r\n            total={total}\r\n            setTotal={setTotal}\r\n            convertPrice={convertPrice}\r\n            found={found}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\product_detail\\detail.js",["121","122"],[],"import styles from \"./detail.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getProducts } from \"../../service/fetcher\";\r\nimport CategoryBar from \"../category/categoryBar\";\r\n\r\nexport const Detail = ({ convertPrice, cart, setCart }) => {\r\n  const { id } = useParams();\r\n  const [product, setProduct] = useState({});\r\n  const [count, setCount] = useState(1);\r\n\r\n  // 상세페이지에서 물건 수량 조절\r\n  const handleQuantity = (type) => {\r\n    if (type === \"plus\") {\r\n      setCount(count + 1);\r\n    } else {\r\n      if (count === 1) return;\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  // 장바구니에 중복된 물건을 담을 때 사용\r\n  const setQuantity = (id, quantity) => {\r\n    const found = cart.filter((el) => el.id === id)[0];\r\n    const idx = cart.indexOf(found);\r\n    const cartItem = {\r\n      id: product.id,\r\n      image: product.image,\r\n      name: product.name,\r\n      quantity: quantity,\r\n      price: product.price,\r\n      provider: product.provider,\r\n    };\r\n    setCart([...cart.slice(0, idx), cartItem, ...cart.slice(idx + 1)]);\r\n  };\r\n\r\n  const handleCart = () => {\r\n    const cartItem = {\r\n      id: product.id,\r\n      image: product.image,\r\n      name: product.name,\r\n      quantity: count,\r\n      price: product.price,\r\n      provider: product.provider,\r\n    };\r\n    const found = cart.find((el) => el.id === cartItem.id);\r\n    if (found) setQuantity(cartItem.id, found.quantity + count);\r\n    else setCart([...cart, cartItem]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts().then((data) => {\r\n      setProduct(\r\n        data.data.products.find((product) => product.id === parseInt(id))\r\n      );\r\n    });\r\n  }, [id, product.price]);\r\n\r\n  return (\r\n    product && (\r\n      <>\r\n      <CategoryBar/>\r\n        <main className={styles.main}>\r\n          <section className={styles.product}>\r\n            <div className={styles.product_img}>\r\n              <img src={product.image} alt=\"product\" />\r\n            </div>\r\n          </section>\r\n          <section className={styles.product}>\r\n            <div className={styles.product_info}>\r\n              <p className={styles.seller_store}>{product.provider}</p>\r\n              <p className={styles.product_name}>{product.name}</p>\r\n              <span className={styles.price}>\r\n                {convertPrice(product.price + \"\")}\r\n                <span className={styles.unit}>원</span>\r\n              </span>\r\n            </div>\r\n\r\n            {/* <div className={styles.delivery}>\r\n              <p>택배배송 / 무료배송</p>\r\n            </div>\r\n\r\n            <div className={styles.line}></div>\r\n\r\n            <div className={styles.amount}>\r\n              <img\r\n                className={styles.minus}\r\n                src=\"/images/icon-minus-line.svg\"\r\n                alt=\"minus\"\r\n                onClick={() => handleQuantity(\"minus\")}\r\n              />\r\n\r\n              <div className={styles.count}>\r\n                <span>{count}</span>\r\n              </div>\r\n\r\n              <img\r\n                className={styles.plus}\r\n                src=\"/images/icon-plus-line.svg\"\r\n                alt=\"plus\"\r\n                onClick={() => handleQuantity(\"plus\")}\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.line}></div>\r\n\r\n            <div className={styles.sum}>\r\n              <div>\r\n                <span className={styles.sum_price}>총 상품 금액</span>\r\n              </div>\r\n\r\n              <div className={styles.total_info}>\r\n                <span className={styles.total}>\r\n                  총 수량 <span className={styles.total_count}>{count}개</span>\r\n                </span>\r\n                <span className={styles.total_price}>\r\n                  {convertPrice(product.price * count)}\r\n                  <span className={styles.total_unit}>원</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={styles.btn}>\r\n              <button className={styles.btn_buy}>바로 구매</button>\r\n              <button\r\n                className={styles.btn_cart}\r\n                onClick={() => {\r\n                  handleCart();\r\n                }}\r\n              >\r\n                장바구니\r\n              </button>\r\n            </div> */}\r\n          </section>\r\n        </main>\r\n      </>\r\n    )\r\n  );\r\n};\r\n","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\main\\main.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\products\\product.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\service\\fetcher.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cartHeader.js",[],[],"C:\\Project\\demo\\src\\main\\frontend\\src\\components\\eventBanner\\eventBanner.js",["123"],[],"import Carousel from 'react-bootstrap/Carousel';\nimport styles from \"./eventBanner.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const EventBanner = () => {\n\n  const specButtonClicked = () => {\n    alert(\"show my computer spec\");\n  }\n\n  return (\n    <div>\n    <Carousel fade>\n      <Carousel.Item>\n        <img\n          className={styles.banner}\n          src=\"images/banner01.png\"\n          alt=\"First slide\"\n        />\n        <div className={styles.right}>\n        <img src=\"images/icon-swiper-2.svg\" alt=\"right\" />\n      </div>\n      <div className={styles.left}>\n        <img src=\"images/icon-swiper-1.svg\" alt=\"left\" />\n      </div>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className={styles.banner}\n          src=\"images/banner02.png\"\n          alt=\"Second slide\"\n        />\n        <div className={styles.right}>\n        <img src=\"images/icon-swiper-2.svg\" alt=\"right\" />\n      </div>\n      <div className={styles.left}>\n        <img src=\"images/icon-swiper-1.svg\" alt=\"left\" />\n      </div>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className={styles.banner}\n          src=\"images/banner03.png\"\n          alt=\"Third slide\"\n        />\n        <div className={styles.right}>\n        <img src=\"images/icon-swiper-2.svg\" alt=\"right\" />\n      </div>\n      <div className={styles.left}>\n        <img src=\"images/icon-swiper-1.svg\" alt=\"left\" />\n      </div>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className={styles.banner}\n          src=\"images/banner04.png\"\n          alt=\"Forth slide\"\n        />\n        <div className={styles.right}>\n        <img src=\"images/icon-swiper-2.svg\" alt=\"right\" />\n      </div>\n      <div className={styles.left}>\n        <img src=\"images/icon-swiper-1.svg\" alt=\"left\" />\n      </div>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className={styles.banner}\n          src=\"images/banner05.png\"\n          alt=\"Fifth slide\"\n        />\n        <div className={styles.right}>\n        <img src=\"images/icon-swiper-2.svg\" alt=\"right\" />\n      </div>\n      <div className={styles.left}>\n        <img src=\"images/icon-swiper-1.svg\" alt=\"left\" />\n      </div>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className={styles.banner}\n          src=\"images/banner06.png\"\n          alt=\"Sixth slide\"\n        />\n        <div className={styles.right}>\n        <img src=\"images/icon-swiper-2.svg\" alt=\"right\" />\n      </div>\n      <div className={styles.left}>\n        <img src=\"images/icon-swiper-1.svg\" alt=\"left\" />\n      </div>\n      </Carousel.Item>\n    </Carousel>\n    <div className={styles.frame}>\n      <Link to={\"/showMySpec\"}>\n        <button className={styles.button}>\n          내 컴퓨터 스펙 불러오기\n        </button>\n      </Link>\n      &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\n      <Link to={\"/insertSpec\"}>\n        <button className={styles.button}>\n        컴퓨터 스펙 입력하기\n        </button>\n      </Link>\n    </div>\n    </div>\n  );\n};","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cartProgress.js",["124"],[],"import { useEffect, useState } from \"react\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport styles from \"./cart.module.css\";\n\nconst WithLabelExample = (totalPrice) => {\n    var now = totalPrice*100 / 30000\n    now = parseInt(now);\n    //console.log(now);\n    //const now = 50\n    return <ProgressBar className={styles.progressBar} now={now} label={`${now}%`} animated = {true} striped variant=\"success\"/>;\n}\n\nexport default WithLabelExample;\n\nexport const CartProgress = ({ total, setTotal,cart, convertPrice, found }) => {\n    //const [totalP, setTotalP] = useState(0);\n    useEffect(() => {\n        if (found) {\n            const temp = found.filter((item) => item.length !== 0);\n            const sum = temp.map((item) => item[0].price * item[0].quantity);\n            const reducer = (acc, cur) => acc + cur;\n            if (sum.length === 0) {\n                setTotal(0);\n                return;\n            }\n            const itemTotal = sum.reduce(reducer);\n            setTotal(itemTotal);\n            //setTotalP(itemTotal)\n        } else {\n            setTotal(0);\n        }\n        \n    }, [cart, total, found, setTotal]);\n\n    return(\n        <div className={styles.progress}>\n            <p></p>\n            <div>\n                {WithLabelExample(total)}\n            </div>\n            <p>{total >= 30000 ? <p className={styles.freeOrder}>무료배송</p> : \n            <p className={styles.order}>{convertPrice(30000 - total)}원 이상 주문시 무료배송</p>}</p>\n        </div>\n    )\n};","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\cartList.js",["125","126","127","128"],[],"import styles from \"./cart.module.css\";\nimport { TotalCart } from \"./totalCart\";\nimport {useRef} from \"react\"\nimport { addDiscount } from \"./totalCart\";\nimport { minusDiscount } from \"./totalCart\";\n\nexport const CartList = ({\n  cart,\n  convertPrice,\n  checkLists,\n  handleQuantity,\n  handleRemove,\n  handleCheckList,\n}) => {\n  const dis = useRef()\n  const chk = useRef()\n  // const couponClick = () => {\n  //   if(chk.current.checked == true) {\n  //     if(dis.current.innerText == \"쿠폰적용\") {\n  //       dis.current.innerText = \"쿠폰적용취소\"\n  //       dis.current.style = \"color:red\"\n  //     }\n  //     else if(dis.current.innerText == \"쿠폰적용취소\") {\n  //       dis.current.innerText = \"쿠폰적용\"\n  //       dis.current.style=\"color:white\"\n  //     }\n  //   } \n  //   else {\n  //     dis.current.innerText = \"쿠폰적용\"\n  //     dis.current.style=\"color:white\"\n  //   }\n  // }\n  return (\n    <section className={styles.cart_product_list}>\n      <input\n        type=\"checkbox\"\n        ref={chk}\n        id={cart.id}\n        onChange={(e) => {\n          handleCheckList(e.currentTarget.checked, `${cart.id}`);\n        }}\n        checked={checkLists.includes(`${cart.id}`) ? true : false}\n      />\n      <div className={styles.cart_product_wrap}>\n        <div className={styles.cart_product_image}>\n          <img src={cart.image} alt=\"product-img\" />\n        </div>\n\n        <div className={styles.cart_product_info}>\n          <p className={styles.seller_store}>{cart.provider}</p>\n          <p className={styles.product_name}>{cart.name}</p>\n          <p className={styles.price}>{convertPrice(cart.price)}원</p>\n          <p className={styles.delivery}>택배배송 / 무료배송</p>\n        </div>\n      </div>\n\n      <div className={styles.cart_product_count}>\n        <img\n          className={styles.minus}\n          src=\"/images/icon-minus-line.svg\"\n          alt=\"minus\"\n          onClick={() => {\n            handleQuantity(\"minus\", cart.id, cart.quantity - 1);\n          }}\n        />\n\n        <div className={styles.count}>\n          <span>{cart.quantity}</span>\n        </div>\n        <img\n          className={styles.plus}\n          src=\"/images/icon-plus-line.svg\"\n          alt=\"plus\"\n          onClick={() => handleQuantity(\"plus\", cart.id, cart.quantity + 1)}\n        />\n      </div>\n\n      <div className={styles.cart_product_price}>\n        <p className={styles.total_price}></p>\n        {/* <button ref={dis} id=\"discount\" className={styles.btn_submit} onClick = {() => couponClick()}>\n          쿠폰적용\n        </button>\n        <p></p>\n        <button className={styles.btn_submit}>주문하기</button> */}\n        <p>{convertPrice(cart.price * cart.quantity)}원</p>\n      </div>\n\n      <div\n        className={styles.product_remove}\n        onClick={() => handleRemove(cart.id)}\n      >\n        <img src=\"/images/icon-delete.svg\" alt=\"delete\" />\n      </div>\n    </section>\n  );\n};\n\n","C:\\Project\\demo\\src\\main\\frontend\\src\\components\\cart\\totalCart.js",["129","130","131","132","133"],[],"import styles from \"./cart.module.css\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert';\nimport Toast from 'react-bootstrap/Toast';\n\nexport const basicAlert = () => {\n  return (\n    <Alert key={'warning'} variant={'warning'}>\n          20000원 이상 구매시 쿠폰을 사용할 수 있습니다.\n    </Alert>\n  );\n}\n\nexport const TotalCart = ({ total, setTotal, cart, convertPrice, found }) => {\n  useEffect(() => {\n    if (found) {\n      const temp = found.filter((item) => item.length !== 0);\n      const sum = temp.map((item) => item[0].price * item[0].quantity);\n      const reducer = (acc, cur) => acc + cur;\n      if (sum.length === 0) {\n        setTotal(0);\n        return;\n      }\n      const itemTotal = sum.reduce(reducer);\n      setTotal(itemTotal);\n    } else {\n      setTotal(0);\n    }\n    if(total >= 30000) {\n      setOrder(0);\n      console.log(order);\n    }\n    else {\n      console.log(order);\n      setOrder(3000);\n    }\n    if(total < 20000){\n      setDiscount(0);\n      dis.current.innerText = \"쿠폰적용\"\n      dis.current.style=\"color:white\"\n    }\n\n  }, [cart, total, found, setTotal]);\n\n  const dis = useRef();\n\n  const couponClick = () => {\n    if(total >= 20000) {\n      if(dis.current.innerText == \"쿠폰적용\") {\n        dis.current.innerText = \"쿠폰적용취소\"\n        dis.current.style = \"color:red\"\n        setDiscount(5000);\n      }\n      else if(dis.current.innerText == \"쿠폰적용취소\") {\n        dis.current.innerText = \"쿠폰적용\"\n        dis.current.style=\"color:white\"\n        setDiscount(0);\n      }\n    }\n    else {\n      alert(\"20000원 이상 구매한 경우 쿠폰을 사용할 수 있습니다.\");\n      basicAlert();\n    }\n    \n  }\n\n  const orderProduct = () => {\n    if(total == 0) {\n      alert(\"상품을 선택해 주세요.\")\n    }\n  }\n\n  const [discount, setDiscount] = useState(0);\n  const [order, setOrder] = useState(3000);\n  return (\n    <>\n    <div className={styles.total}>\n      <div className={styles.total_price}>\n        <p className={styles.cart_product_total_price}>총 상품금액</p>\n        <p className={styles.cart_product_price}>{convertPrice(total)}</p>\n      </div>\n      <div className={styles.pay_minus}>\n        <img src=\"/images/icon-minus-line.svg\" alt=\"minus\" />\n      </div>\n      <div className={styles.sale}>\n        <p className={styles.cart_product_sale}>상품 할인</p>\n        <p className={styles.cart_product_sale_price}>{discount}원</p>\n      </div>\n      <div className={styles.pay_plus}>\n        <img src=\"/images/icon-plus-line.svg\" alt=\"plus\" />\n      </div>\n      <div className={styles.delivery}>\n        <p className={styles.cart_product_delivery}>배송비</p>\n        <p className={styles.cart_product_delivery_price}>{order}원</p>\n      </div>\n\n      <div className={styles.payment}>\n        <p className={styles.cart_prouct_payment}>결제 예정 금액</p>\n        <p className={styles.cart_prouct_payment_price}>\n          {convertPrice(total - discount + order)}\n        </p>\n      </div>\n      <div className={styles.cart_product_price}>\n        <button ref={dis} className={styles.btn_submit} onClick = {() => couponClick()}>\n          쿠폰적용\n        </button>\n        <p></p>\n        <Link to={total > 0 ? \"/cart/orderComplete\" : \"/cart\"}>\n          <button className={styles.btn_submit} onClick={() => orderProduct()}>\n            선택상품주문하기\n          </button>\n        </Link>\n    </div>\n    </div>\n    \n    </>\n  );\n};\n\n",{"ruleId":"134","severity":1,"message":"135","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":19},{"ruleId":"134","severity":1,"message":"138","line":18,"column":9,"nodeType":"136","messageId":"137","endLine":18,"endColumn":10},{"ruleId":"139","severity":1,"message":"140","line":6,"column":18,"nodeType":"141","messageId":"142","endLine":6,"endColumn":62},{"ruleId":"143","severity":1,"message":"144","line":42,"column":37,"nodeType":"145","messageId":"146","endLine":42,"endColumn":39},{"ruleId":"134","severity":1,"message":"147","line":18,"column":9,"nodeType":"136","messageId":"137","endLine":18,"endColumn":23},{"ruleId":"134","severity":1,"message":"148","line":13,"column":9,"nodeType":"136","messageId":"137","endLine":13,"endColumn":23},{"ruleId":"134","severity":1,"message":"149","line":37,"column":9,"nodeType":"136","messageId":"137","endLine":37,"endColumn":19},{"ruleId":"134","severity":1,"message":"150","line":7,"column":9,"nodeType":"136","messageId":"137","endLine":7,"endColumn":26},{"ruleId":"134","severity":1,"message":"151","line":1,"column":21,"nodeType":"136","messageId":"137","endLine":1,"endColumn":29},{"ruleId":"134","severity":1,"message":"152","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":19},{"ruleId":"134","severity":1,"message":"153","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":21},{"ruleId":"134","severity":1,"message":"154","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":23},{"ruleId":"134","severity":1,"message":"155","line":15,"column":9,"nodeType":"136","messageId":"137","endLine":15,"endColumn":12},{"ruleId":"134","severity":1,"message":"156","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":13},{"ruleId":"157","severity":1,"message":"158","line":46,"column":6,"nodeType":"159","endLine":46,"endColumn":36,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":52,"column":32,"nodeType":"163","messageId":"164","endLine":52,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":57,"column":37,"nodeType":"163","messageId":"164","endLine":57,"endColumn":39},{"ruleId":"161","severity":1,"message":"162","line":71,"column":14,"nodeType":"163","messageId":"164","endLine":71,"endColumn":16},"no-unused-vars","'CategoryBar' is defined but never used.","Identifier","unusedVar","'a' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'handelDiscount' is assigned a value but never used.","'handleQuantity' is assigned a value but never used.","'handleCart' is assigned a value but never used.","'specButtonClicked' is assigned a value but never used.","'useState' is defined but never used.","'TotalCart' is defined but never used.","'addDiscount' is defined but never used.","'minusDiscount' is defined but never used.","'dis' is assigned a value but never used.","'Toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["165"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"166","fix":"167"},"Update the dependencies array to be: [cart, total, found, setTotal, order]",{"range":"168","text":"169"},[1178,1208],"[cart, total, found, setTotal, order]"]